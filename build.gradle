apply plugin: 'android-library'
apply plugin: 'maven'
apply plugin: 'signing'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
    }
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        // If you change minSdkVersion or targetSdkVersion below, you must also change
        // the relevant attributes of the <uses-sdk> tag in AndroidManifest.xml
        minSdkVersion 9
        targetSdkVersion 21
        testApplicationId "com.mixpanel.android.mpmetrics"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"

        lintOptions {
            abortOnError true
            warningsAsErrors true
        }
    }
}

// Note- *all* dependencies are marked as optional in our final
// pom! If you need a transitive dependency in the library, you'll
// have to change the bit in uploadArchives that marks all dependencies as optional.
dependencies {
    compile "com.google.android.gms:play-services:[3.1,)"
}

android.libraryVariants.all { variant ->
    task("generate${variant.name}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        exclude(
            '**/R.*',
            '**/java_websocket/**',
            '**/util/**',
            '**/AlwaysSubmittableEditText.java',
            '**/BuildConfig.java',
            '**/CardCarouselLayout.java',
            '**/FadeOnPressButton.java',
            '**/FadingImageView.java',
            '**/InAppFragment.java',
            '**/MiniCircleImageView.java',
            '**/SurveyActivity.java',
            '**/SurveyChoiceView.java',
            '**/SurveyCallbacks.java',
            '**/TrackingDebug.java',
            '**/Tweaks.java', // Someday this will be exposed to the public
            '**/UpdateDisplayState.java',
            '**/UpdatesFromMixpanel.java',
            '**/ViewCrawler.java'
        )
        options {
            encoding = 'UTF-8'
            docEncoding = 'UTF-8'
            charSet = 'UTF-8'
        }
    }
}

android.buildTypes.all { buildType ->
    buildType.buildConfigField "String", "MIXPANEL_VERSION", "\"${project.properties.version}\""
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

def isReleaseVersion() {
    return !version.endsWith("SNAPSHOT");
}

if (isReleaseVersion()) {
    signing {
        required { gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }
}

uploadArchives {
    configuration = configurations.archives

    repositories.mavenDeployer {
        pom.project {
            name project.name
            packaging 'aar'
            description 'An Alooma Analytics Android library based on  Mixpanel SDK'
            url 'https://github.com/Aloomaio/alooma-mixpanel-android'
            scm {
                url 'http://github.com/Aloomaio/alooma-mixpanel-android'
                connection 'scm:git:http://github.com/Aloomaio/alooma-mixpanel-android'
                developerConnection 'scm:git:git@github.com:Aloomaio/alooma-mixpanel-android.git'
            }
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/license/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            developers {
                developer {
                    id 'jbwyme'
                    name 'Josh Wymer'
                    email 'josh@mixpanel.com'
                }
                developer {
                    id 'joeatwork'
                    name 'Joe Bowers'
                    email 'joe@mixpanel.com'
                }
            }
        }

        pom.whenConfigured { pom ->
            pom.dependencies*.optional = true
        }

        if (isReleaseVersion() && project.hasProperty("sonatypeUsername")) {
            /**
             * In order to do nexus deploys, you'll need to setup a gradle.properties file in $HOME/.gradle
             * with the following properties. You'll need the mixpanel.key file and then import it using GnuPG
             * which will provide you with the keyId and the secring.gpg file
             * signing.keyId=
             * signing.password=
             * signing.secretKeyRingFile=
             *
             * sonatypeRepo=https://oss.sonatype.org/service/local/staging/deploy/maven2/
             * sonatypeUsername=
             * sonatypePassword=
             */

            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
        } else {
            repository(url:'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath)
        }

    }
}

